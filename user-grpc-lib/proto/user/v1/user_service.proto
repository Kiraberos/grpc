syntax = "proto3";

package user.v1;

option go_package = "github.com/grpc/user-grpc-lib/pkg/pb/user/v1";

import "google/protobuf/timestamp.proto";

// User service definition
service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
    rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse);
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
}

// Enums
enum Role {
    ROLE_UNSPECIFIED = 0;
    ROLE_USER = 1;
    ROLE_MODERATOR = 2;
    ROLE_ADMIN = 3;
}

// User message
message User {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    Role role = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
    google.protobuf.Timestamp deleted_at = 8;
    int32 rating = 9;
}

// Request messages
message CreateUserRequest {
    string email = 1;
    string password = 2;
    string first_name = 3;
    string last_name = 4;
}

message CreateUserResponse {
    User user = 1;
}

message GetUserByEmailRequest {
    string email = 1;
}

message GetUserByEmailResponse {
    User user = 1;
}

message GetUserByIDRequest {
    string id = 1;
}

message GetUserByIDResponse {
    User user = 1;
}

message GetUsersRequest {
    int64 page = 1;
    int64 page_size = 2;
}

message GetUsersResponse {
    repeated User users = 1;
    int64 total = 2;
    int64 page = 3;
    int64 page_size = 4;
    int64 total_pages = 5;
}

message UpdateUserRequest {
    string id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
}

message UpdateUserResponse {
    User user = 1;
}

message DeleteUserRequest {
    string id = 1;
    string actor_id = 2;
    Role actor_role = 3;
}

message DeleteUserResponse {
    bool success = 1;
}
